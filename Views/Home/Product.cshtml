﻿@using InventoryManagement.ViewModel
@model ProductViewModel
@{
    ViewData["Title"] = "Product List";
}

<div class="container">
    <div class="row">
        <div class="col-8">
            <h2>Product List </h2>
        </div>
        <div class="col-4">
            <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addmodal">Add Product</button>
        </div>
    </div>
    <div class="row">

        @if (Model != null && Model.Products.Count() > 0)
        {
            <table class="table">
                <thead>
                    <tr>
                        <th scope="col">Products</th>
                        <th scope="col">Price</th>
                        <th scope="col">Quantity</th>
                        <th scope="col">Category Name</th>
                        <th scope="col">Actions</th>

                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.Products)
                    {
                        <tr>
                            <td>@item.Name</td>
                            <td>@item.Price</td>
                            <td>@item.Quantity</td>
                            <td>@Model.Category.Where(x => x.Id == item.CategoryId).FirstOrDefault().Name</td>
                            <td>
                                <button class="btn btn-primary" id="updateBtn" onclick="updateProduct(@item.Id, '@item.Name', '@item.Price', '@item.Quantity', '@item.CategoryId')">
                                    <i class="fas fa-edit"></i>
                                </button>
                                <button class="btn btn-danger" id="deleteBtn" onclick="deleteProduct(@item.Id)">
                                    <i class="fas fa-trash-alt"></i>
                                </button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
        else
        {
            <h2 class="text-center py-3">No Product available.</h2>
        }
    </div>
</div>

<!-- Add Modal -->
<div class="modal fade" id="addmodal" tabindex="-1" aria-labelledby="addmodalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addmodalLabel">Add Product</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="mb-3">
                    <label for="productDetail" class="form-label">Product</label>
                    <input type="text" class="form-control" id="productDetail" placeholder="Please enter Product name here." aria-describedby="product detail">
                    <div class="invalid-feedback product-detail-error"></div>
                </div>
                <div class="mb-3">
                    <label for="productPrice" class="form-label">Price</label>
                    <input type="number" class="form-control" id="productPrice" placeholder="Please enter price here." aria-describedby="product price">
                    <div class="invalid-feedback product-price-error"></div>
                </div>
                <div class="mb-3">
                    <label for="productQuantity" class="form-label">Quantity</label>
                    <input type="number" class="form-control" id="productQuantity" placeholder="Please enter quantity here." aria-describedby="product quantity">
                    <div class="invalid-feedback product-quantity-error"></div>
                </div>
                <label for="productCategoryId" class="form-label">Select Category</label>
                <select id="productCategoryId" class="form-select form-select-lg mb-3" aria-label=".form-select-lg example">
                    <option value="">Please select the categoty</option>
                    @foreach (var x in Model.Category)
                    {
                        <option value="@x.Id">@x.Name</option>
                    }
                </select>
                <div class="invalid-feedback product-CategoryId-error"></div>

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" onclick="saveProduct()">Save Product</button>
            </div>
        </div>
    </div>
</div>

<!-- Update Modal -->
<div class="modal fade" id="updatemodal" tabindex="-1" aria-labelledby="updatemodalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="updatemodalLabel">Update Category</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="mb-3">
                    <label for="updateProductDetail" class="form-label">Product</label>
                    <input type="text" class="form-control" id="updateProductDetail" aria-describedby="product detail">
                    <div class="invalid-feedback update-product-detail-error"></div>
                    <label for="updateProductPrice" class="form-label">Price</label>
                    <input type="text" class="form-control" id="updateProductPrice" aria-describedby="product price">
                    <div class="invalid-feedback update-product-price-error"></div>
                    <label for="updateProductQuantity" class="form-label">Quantity</label>
                    <input type="text" class="form-control" id="updateProductQuantity" aria-describedby="product quantity">
                    <div class="invalid-feedback update-product-quantity-error"></div>
                    <label for="updateProductCategoryId" class="form-label">Select Category</label>
                    <select id="updateProductCategoryId" class="form-select form-select-lg mb-3" aria-label=".form-select-lg example">
                        <option value="0">Please select the category</option>
                        @foreach (var x in Model.Category)
                        {
                            <option value="@x.Id">@x.Name</option>
                        }
                    </select>
                    <div class="invalid-feedback update-product-CategoryId-error"></div>
                    <input type="hidden" id="updateProductId">

                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" onclick="triggerUpdateApi()">Update Product</button>
            </div>
        </div>
    </div>
</div>

<script>
    function saveProduct() {
        // validation
        var productName = $("#productDetail").val();
        var productPrice = $('#productPrice').val();
        var productQuantity = $('#productQuantity').val();
        var productCategoryId = $('#productCategoryId').val();
        var isError = false;
        if (productName == null || productName == undefined || productName == "") {
            $(".product-detail-error").text("Please enter Product name");
            $(".product-detail-error").css("display", "block");
            isError = true;
        }
        else {
            $(".product-detail-error").text("");
            $(".product-detail-error").css("display", "none");
        }
        if (productPrice == null || productPrice == undefined || productPrice == 0) {
            $(".product-price-error").text("Please enter Product price");
            $(".product-price-error").css("display", "block");
            isError = true;

        }
        else {
            $(".product-price-error").text("");
            $(".product-price-error").css("display", "none");
        }
        if (productQuantity == null || productQuantity == undefined || productQuantity == 0) {
            $(".product-quantity-error").text("Please enter Product quantity");
            $(".product-quantity-error").css("display", "block");
            isError = true;

        }
        else {

            $(".product-quantity-error").text("");
            $(".product-quantity-error").css("display", "none");
        }
        if (productCategoryId == null || productCategoryId == undefined || productCategoryId == 0) {
            $(".product-CategoryId-error").text("Please select category from the dropdown list");
            $(".product-CategoryId-error").css("display", "block");
            isError = true;
        }
        else {

            $(".product-CategoryId-error").text("");
            $(".product-CategoryId-error").css("display", "none");
        }
        if (isError) { return; }
        // then ajax call
        var request = { Name: productName, Price: productPrice, Quantity: productQuantity, CategoryId: productCategoryId };
        $.ajax({
            type: 'POST',
            url: '/Home/CreateProduct',
            data: JSON.stringify(request),
            contentType: 'application/json',
            dataType: "JSON",
            success: function (response) {
                debugger
                if (response.success) {
                    $('#addmodal').modal('hide');
                    $("#productDetail").val("");
                    $("#productPrice").val("");
                    $("#productQuantity").val("");
                    $("#productCategoryId").val("");
                    alert(response.message);
                    window.location.reload();
                } else {
                    alert(response.message);
                }
            },
            error: function (xhr, status, error) {
                alert("something went wrong, Please try again later.");
            }
        });
        // show success or error messgage
    }

    function deleteProduct(id) {
        var userConfirmed = confirm("Are you sure you want to delete this Product?");
        if (userConfirmed) {
            var xyz = { Id: id };
            $.ajax({
                type: 'POST',
                url: '/home/DeleteProduct',
                data: JSON.stringify(xyz),
                contentType: 'application/json',
                dataType: 'json',
                success: function (response) {
                    if (response.success == true) {
                        alert(response.message);
                        window.location.reload();
                    } else {
                        alert(response.message);
                    }
                },
                error: function (xhr, status, error) {
                    alert("An error occurred, please try again later. ");
                }
            });
        }
    }

    function updateProduct(id, Name, Price, Quantity, CategoryId) {

        $('#updatemodal').modal('show');
        $("#updateProductDetail").val(Name);
        $('#updateProductPrice').val(Price);
        $('#updateProductQuantity').val(Quantity);
        $('#updateProductCategoryId').val(CategoryId);
        $("#updateProductId").val(id);
    }

    function triggerUpdateApi() {
        // validation
        var id = $("#updateProductId").val();
        var productName = $("#updateProductDetail").val();
        var productPrice = $('#updateProductPrice').val();
        var productQuantity = $('#updateProductQuantity').val();
        var productCategoryId = $('#updateProductCategoryId').val();
        var isError = false;
       if (productName == null || productName == undefined || productName == "") {
            $(".update-product-detail-error").text("Please enter Product name");
            $(".update-product-detail-error").css("display", "block");
            isError = true;
        }
        else {
            $(".update-product-detail-error").text("");
            $(".update-product-detail-error").css("display", "none");
        }
        if (productPrice == null || productPrice == undefined || productPrice == 0) {
            $(".update-product-price-error").text("Please enter Product price");
            $(".update-product-price-error").css("display", "block");
            isError = true;

        }
        else {
            $(".update-product-price-error").text("");
            $(".update-product-price-error").css("display", "none");
        }
        if (productQuantity == null || productQuantity == undefined || productQuantity == 0) {
            $(".update-product-quantity-error").text("Please enter Product quantity");
            $(".update-product-quantity-error").css("display", "block");
            isError = true;

        }
        else {

            $(".update-product-quantity-error").text("");
            $(".update-product-quantity-error").css("display", "none");
        }
        if (productCategoryId == null || productCategoryId == undefined || productCategoryId == 0) {
            $(".update-product-CategoryId-error").text("Please select category from the dropdown list");
            $(".update-product-CategoryId-error").css("display", "block");
            isError = true;
        }
        else {

            $(".update-product-CategoryId-error").text("");
            $(".update-product-CategoryId-error").css("display", "none");
        }
        if (isError) { return; }


        var request = { Id: id, Name: productDetail, Price: productPrice, Quantity: productQuantity, CategoryId: productCategoryId };
        $.ajax({
            type: 'POST',
            url: '/Home/UpdateProduct',
            data: JSON.stringify(request),
            contentType: 'application/json',
            dataType: "JSON",
            success: function (response) {
                debugger
                if (response.success) {
                    $('#updatemodal').modal('hide');
                    $("#updateProductDetail").val("");
                    $('#updateProductPrice').val("");
                    $('#updateProductQuantity').val("");
                    $('#updateProductCategoryId').val("");
                    $("#updateProductId").val("");

                    alert(response.message);
                    window.location.reload();
                } else {
                    alert(response.message);
                }
            },
            error: function (xhr, status, error) {
                alert("something went wrong, Please try again later.");
            }
        });
    }
</script>